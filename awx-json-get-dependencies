#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2020 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.


[[ -z "$1" ]] && exit 1
JSON="$1"

function get_dir()
{
  local DIR

  DIR='job_template'
  [[ "$1" =~ wfw.*     ]] && DIR='workflow'
  [[ "$1" =~ ansible.* ]] && DIR='project'
  echo "$DIR"
}

function get_branch()
{
  awx-project-get-variable "$1" scm_branch
}

function get_revision()
{
  awx-project-get-variable "$1" scm_revision
}

function get_json()
{
  local JSON
  local NAME

  mkdir -p "$1"
  NAME="$(echo "$2" | tr '/' '-')"
  JSON="$1/$NAME.json"

  if [[ ! -e "$JSON" ]]
  then
    >&2 echo receive $JSON
    awx-cli receive --$1 "$2" > "$JSON"
  fi
}

function get_dependencies()
{

awx-json-get-unified-job-name "$1" | while read -r i
do
  DIR="$(get_dir "$i")"

  get_json $DIR $i

  printf "%-15s %s\n" "$DIR" "$i"

  if [[ "$DIR" = 'job_template' ]]
  then
    awx-json-get-project "$DIR/$i.json" | while read -r j
    do
      get_json project $j
      BRANCH="$(get_branch "$j")"
      REVISION="$(get_revision "$j")"
      printf "%-15s %-40s %15s %s\n" 'project' "$j" "$BRANCH" "$REVISION"
    done
  else
    get_dependencies "$DIR/$i.json"
  fi

done | sort -u

}

DEP="$(mktemp)"
get_dependencies "$JSON" > "$DEP"
grep project       "$DEP"
grep job_template  "$DEP"
grep workflow      "$DEP"

FILE="$(echo "$JSON" | cut -d/ -f2)"

printf "%-15s %s\n" "$(get_dir "$FILE")" "$(basename "$FILE" .json)"
