#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2020 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck source=/dev/null

DIR_BIN=$(dirname "$0") && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF
Usage:

\`\`\`bash

  $BIN

\`\`\`

Convert git URL from _SSH_ to _HTTPS_ in \`src:\` of \`requirements.yml\`

Example:

\`\`\`bash

 $BIN

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

REQ='roles/requirements.yml'

[[ -e '.git/config' ]] || die "NOT FOUND GIT REPOSITORY IN $PWD"
[[ -e "$REQ" ]] && ROLES_SRC="$REQ"
[[ -e "tests/$REQ" ]] && ROLES_SRC="tests/$REQ"
[[ -z "$ROLES_SRC" ]] && die "NOT FOUND ROLES IN $PWD"

GITLAB_GIT_URL="$(git config --get remote.origin.url | head -1)"
GITLAB_HTTPS="$(echo "$GITLAB_GIT_URL" | grep -ow 'https')"

[[ "$GITLAB_HTTPS" = 'https' ]] || die "NOT FOUND HTTPS ORIGIN"

GITLAB_TOKEN="$(echo "$GITLAB_GIT_URL" | cut -d@ -f1 | cut -d/ -f3)"

sed -i "s/src: git@/src: https:\\/\\/$GITLAB_TOKEN@/g" "$ROLES_SRC"
sed -i 's/:\//\//g' "$ROLES_SRC"
log "$PWD/$ROLES_SRC UPDATED"
