#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2021 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck source=/dev/null

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF

Usage:

\`\`\`bash

  $BIN CSV [FILTER_NAME] [FILTER_GROUP]

\`\`\`

Read CSV and generate files:

  - \`config\` (all hosts order by group and host)

    Host wst12345 wst01dev
         Hostname wst01dev.example.com

    Host wst12346 wst01prd
         Hostname wst01prd.example.com

  - \`groups\` (all groups)

    dev
    prd

  - \`host_vars/INVENTORY_HOST.yml\` (one file per host)

			---

			ansible_host: 10.0.0.45
			primary_maccaddress: ca:fe:ca:fe:01:23
			hostname: wst01dev
			inventory_serial: W31415926

  - \`hosts\` (all hosts in groups)

			[dev]
			wst12345

			[prd]
			wst12346

\`\`\`

Example:

\`\`\`bash

  $BIN wst.csv wst dev

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

FILTER_NAME='.*'
FILTER_GROUP='.*'

[[ -z "$1" ]] && die "EMPTY CSV"
[[ -e "$1" ]] || die "NOT FOUND $1"

CSV="$1"

[[ -z "$2"              ]] || FILTER_NAME="$2"
[[ -z "$3"              ]] || FILTER_GROUP="$3"
[[ -z "$DEFAULT_DOMAIN" ]] || DOMAIN="$DEFAULT_DOMAIN"
[[ -z "$DEFAULT_SEP"    ]] || SEP="$DEFAULT_SEP"

TMP="$(mktemp)"

awk "/$FILTER_NAME/ {print \$0}" "$CSV" \
  | tr -d "'"                           > "$TMP"

awk -F "$SEP" '{print  $2}' "$TMP"      \
  | grep -v '^$'                        \
  | grep -Eo "$FILTER_GROUP"            \
  | sort -u                             > 'groups'

true > hosts
true > config

while read -r GROUP
do

  printf "\\n\\n[%s]\\n" "$GROUP" >> hosts

  grep "$GROUP" "$TMP" \
    | tr -d "'"        \
    | while IFS=',' read -r HOST NAME IP MAC SERIAL
      do

        FQDN="$NAME.$DOMAIN"
        YAML="host_vars/$HOST.yml"
        mkdir -p host_vars

        printf "%s\\n" "$HOST" >> hosts

        printf "%s" "$(yaml_host_vars "$IP" "$MAC" "$NAME" "$SERIAL")"  > "$YAML"

        printf "%s" "$(ssh_config     "$HOST" "$NAME" "$FQDN")" >> config

  done

done < 'groups'

TOTAL_GROUPS="$(wc -l groups | awk '{print $1}')"
TOTAL_CONFIG="$(grep -c '^Host ' config)"
TOTAL_HOSTS="$(grep -v '^$' 'hosts' | grep -v '\[' | sort -u | wc -l)"
TOTAL_YAML="$(find host_vars -type f -iname '*.yml' | wc -l)"

printf "%-5s %s\\n" "$TOTAL_GROUPS" 'groups'
printf "%-5s %s\\n" "$TOTAL_CONFIG" 'hosts in config file'
printf "%-5s %s\\n" "$TOTAL_HOSTS"  'hosts'
printf "%-5s %s\\n" "$TOTAL_YAML"   'host_vars/*.yml files'
