#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2020 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck source=/dev/null
# shellcheck disable=2086

[[ -n "$BASH_DEBUG" ]] && set -x

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF
Usage:

\`\`\`

  $BIN INVENTORY GROUP [FILE]

\`\`\`

Create or modify _group_ in _inventory_ with variables from \`.yaml\` o
\`.json\` file.

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -n "$INVENTORY"   ]] || INVENTORY="$1"
[[ -z "$INVENTORY"   ]] && die "EMPTY INVENTORY"
[[ -n "$GROUP"       ]] || GROUP="$2"
[[ -z "$GROUP"       ]] && die "EMPTY GROUP"
[[ -n "$DESCRIPTION" ]] || DESCRIPTION="$3"
[[ -n "$GROUPS_INDEX" ]] || GROUPS_INDEX="groups/index"
[[ -n "$YQ_SORT_KEYS" ]] || YQ_SORT_KEYS=1
[[ -z "$4"           ]] || FILE="$4"
[[ -n "$VARIABLES"   ]] || VARIABLES=''
[[ -n "$DIFF_WIDTH"  ]] || DIFF_WIDTH='160'
[[ -n "$MID_WIDTH"   ]] || MID_WIDTH="$((DIFF_WIDTH/2))"

if [[ -n "$FILE" ]]
then
  [[ -s "$FILE"  ]] && VARIABLES="--variables @$FILE"
fi

INVENTORY_ID="$(inventory_get_id "$INVENTORY")"

[[ -z "$INVENTORY_ID" ]] && die "NOT FOUND INVENTORY $INVENTORY"

GROUP_ID="$(awx-cli group get    \
        --inventory "$INVENTORY" \
        --name "$GROUP"          \
        --format id 2>/dev/null  || true )"

if [[ -s "$FILE" ]]
then
  NEW_VARIABLES="$(mktemp --suffix .yml)"
  if [[ "$YQ_SORT_KEYS" -eq 1 ]]
  then
    yq -y --sort-keys -r . "$FILE" | grep -v '^---' > "$NEW_VARIABLES"
  else
   grep ':' "$FILE" > "$NEW_VARIABLES"
  fi
  DIFF_WIDTH_NEW="$(wc -L "$NEW_VARIABLES" | awk '{print $1}')"
fi

if [[ -z "$DESCRIPTION" ]]
then
  DESCRIPTION="$(group_index_get_description "$GROUP")"
  echo "GET '$DESCRIPTION' FOR GROUP $GROUP FROM $GROUPS_INDEX"
fi

# EXIT IMMEDIATELY IF A COMMAND EXITS WITH A NON-ZERO STATUS
set -e

if [[ -z "$GROUP_ID" ]]
then

  echo "NOT FOUND GROUP $GROUP EMPTY GROUP_ID"
  echo "CREATE GROUP $GROUP IN INVENTORY $INVENTORY"
  echo "ADD DESCRIPTION '$DESCRIPTION'"

  if [[ -s "$NEW_VARIABLES" ]]
  then
    echo "ADD VARIABLES FROM $FILE"
    repeat_string "$MID_WIDTH" '-'
    cat "$NEW_VARIABLES"
    repeat_string "$MID_WIDTH" '-'
  fi

  awx-cli group create           \
    --format id                  \
    --inventory "$INVENTORY"     \
    --name "$GROUP"              \
    --description "$DESCRIPTION" $VARIABLES

else

  echo "FOUND GROUP $GROUP WITH GROUP_ID $GROUP_ID"
  OLD_DESCRIPTION="$(group_get_description "$INVENTORY" "$GROUP")"
  OLD_VARIABLES="$(mktemp --suffix .yml)"
  awx-group-get-variable "$INVENTORY" "$GROUP" \
    | grep -v '^---'                           \
    | grep -v '^$'                             > "$OLD_VARIABLES"
  DIFF_WIDTH_OLD="$(wc -L "$OLD_VARIABLES" | awk '{print $1}')"
  echo "MODIFY GROUP $GROUP IN INVENTORY $INVENTORY"
  echo "REPLACE RESCRIPTION '$OLD_DESCRIPTION' WITH '$DESCRIPTION'"

  if [[ -s "$FILE" ]]
  then
    echo "UPDATE VARIABLES FROM $FILE"

    repeat_string "$DIFF_WIDTH" '-'

    if [[ "$DIFF_WIDTH_OLD" -ge "$DIFF_WIDTH_NEW" ]]
    then
      DIFF_WIDTH="$DIFF_WIDTH_OLD"
    else
      DIFF_WIDTH="$DIFF_WIDTH_NEW"
    fi

    diff -W "$DIFF_WIDTH" -y "$OLD_VARIABLES" "$NEW_VARIABLES" || true

    repeat_string "$DIFF_WIDTH" '-'
  fi

  awx-cli group modify           \
    --format id                  \
    --inventory "$INVENTORY"     \
    --name "$GROUP"              \
    --description "$DESCRIPTION" $VARIABLES

fi

repeat_string "$MID_WIDTH" '='

rm -f "$NEW_VARIABLES"
rm -f "$OLD_VARIABLES"
