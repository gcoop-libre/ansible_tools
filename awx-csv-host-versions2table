#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2021 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck source=/dev/null

DIR_BIN=$(dirname "$0") && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF
Usage:

\`\`\`bash

  $BIN CSV

\`\`\`

Convert \`.csv\` with host versions to table group by version.

Example:

  $BIN awx-host-versions.csv

  vers        v1.0.0    v1.1.0    v1.1.1    v1.1.2    v1.1.3
  n01              0         0        19         0         1
  n02              0         0         8         0         0
  n03              0         0        13         0         0
  n04              0         0        15         0         0
  n05              2         0         9         0         0
  n06              2         0         5         0         0
  n07              2         0         5         0         0
  n08              1         0         5         0         0
  n00              2         0         4         0         0
  n09              1         0         6         0         0
  n10              4         1         1         2         0

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

TMP1="$(mktemp)"
TMP2="$(mktemp)"

REGEX='v[0-9]+\.[0-9]+\.[0-9]+'
CSV='awx-host-versions.csv'

[[ -z "$1"     ]] && CSV="$1"
CSV="$1"
[[ ! -e "$CSV" ]] && die "NOT FOUND CSV $CSV"
[[ ! -s "$CSV" ]] && die "EMPTY $CSV"

# get unique versions
awk '{print $4}' "$CSV" | grep -Eo "$REGEX" | sort -u > "$TMP1"

# get unique networks
awk '{print $1}' "$CSV" | sort -u > "$TMP2"

# print colunm headers
printf "%-10s " "vers  "
while read -r VERSION
do
  printf "%9s " "$VERSION"
done < "$TMP1"
printf "\\n"

# print rows
while read -r NETWORK
do

  printf "%-10s " "$NETWORK"

  # print columns
  while read -r VERSION
  do

    TOTAL="$(grep -Ec "$NETWORK.*$VERSION" "$CSV")"
    printf "%9d " "$TOTAL"

  done < "$TMP1"

  printf "\\n"

done < "$TMP2"

rm -f "$TMP1" "$TMP2"
