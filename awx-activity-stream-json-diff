#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2023 Osiris Alejandro Gomez <osiux@osiux.com>
# Copyright (C) 2023 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1091
# shellcheck disable=SC2094
# shellcheck disable=SC2034

[[ -n "$BASH_DEBUG" ]] && set -x

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF
Usage:

\`\`\`

  $BIN JSON_LIST

\`\`\`

Show changes of list of _JSONs_ files of _activity stream_ of one or
more _hosts_ or _groups_.

Use \`delta\` when installed, otherwise use \`diff\` to show differences
between the values stored in _AWX_ versus changes sended.

Example:

\`\`\`

	cat activity-wst14-1689265367.json

	activity-57685.json
	activity-52994.json

  $BIN activity-wst14-1689265367.json

		## ACTIVITY ID=57685 OPERATION=update ACTOR=awx_inventory TIMESTAMP=2023-07-11T21:14:26 HOST=wst14dev DESCRIPTION=imported

		### VARIABLES CHANGED

		{                                                               {
			"ansible_host": "10.12.153.109",                            |   "ansible_host": "10.12.153.93",
			"primary_macaddress": "2e:7c:0f:25:de:30"                   |   "primary_macaddress": "06:a4:59:a8:e0:ea"
		}                                                               }

		## ACTIVITY ID=52994 OPERATION=update ACTOR=awx_inventory TIMESTAMP=2023-05-17T21:36:09 HOST=wst14dev DESCRIPTION=imported

		### VARIABLES CHANGED

		---                                                           | {
		ansible_host: 10.12.153.109                                   |   "ansible_host": "10.12.153.109",
																																	>   "primary_macaddress": "2e:7c:0f:25:de:30"
																																	> }

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -n "$DIFF_OPTS"  ]] || DIFF_OPTS='--side-by-side'
[[ -n "$DIFF_CMD"   ]] || DIFF_CMD="diff $DIFF_OPTS"
[[ -z "$DELTA_OPTS" ]] || DELTA_OPTS='--paging never --side-by-side'
[[ -n "$DELTA"      ]] || DELTA="$(command -v delta || true)"
[[ -z "$DELTA"      ]] || DIFF_CMD="$DELTA --paging never --side-by-side"
[[ -n "$JSON_LIST"  ]] || JSON_LIST="$1"
[[ -e "$JSON_LIST"  ]] || die "NOT FOUND FILE $JSON_LIST"

TYPE="$(jq -r '.type' "$JSON_LIST" 2>/dev/null)"

# when JSON_LIST is a JSON filename, generate new JSON_LIST
if [[ "$TYPE" = 'activity_stream' ]]
then
  JSON="$JSON_LIST"
  JSON_LIST="$(mktemp --suffix .lst)"
  echo "$JSON" > "$JSON_LIST"
fi

VARS_BEFORE="$(mktemp --suffix .json    | sed 's/tmp\./awx-vars\./g')"
VARS_AFTER="$(mktemp --suffix .json     | sed 's/tmp\./host-vars\./g')"
ENABLED_BEFORE="$(mktemp --suffix .json | sed 's/tmp\./awx-enabled\./g')"
ENABLED_AFTER="$(mktemp --suffix .json  | sed 's/tmp\./host-enabled\./g')"

while read -r JSON
do

  # IGNORE FILE WHEN DON'T EXISTS
  [[ -e "$JSON" ]] || continue

  # IGNORE FILE WHEN IS NOT VALID JSON ACTIVITY STREAM
  TYPE="$(jq -r '.type' "$JSON" 2>/dev/null)"
  [[ "$TYPE" = 'activity_stream' ]] || continue

  ID="$(jq -r '.id' "$JSON")"
  OPERATION="$(jq -r '.operation' "$JSON")"
  ACTOR="$(jq -r '.summary_fields.actor.username' "$JSON")"
  OBJECT1="$(jq -r .object1 "$JSON")"
  OBJECT2="$(jq -r .object2 "$JSON")"
  HOST_NAME="$(jq -r '.summary_fields.host[].name' "$JSON" 2>/dev/null)"
  HOST_DESCRIPTION="$(jq -r '.summary_fields.host[].description' "$JSON" 2>/dev/null)"
  GROUP_NAME="$(jq -r '.summary_fields.group[].name' "$JSON" 2>/dev/null)"
  GROUP_DESCRIPTION="$(jq -r '.summary_fields.group[].description' "$JSON" 2>/dev/null)"
  JOB_NAME="$(jq -r '.summary_fields.job[].name' "$JSON" 2>/dev/null)"
  JOB_DESCRIPTION="$(jq -r '.summary_fields.job[].description' "$JSON" 2>/dev/null)"
  JOB_STATUS="$(jq -r '.summary_fields.job[].status' "$JSON" 2>/dev/null)"
  INVENTORY_NAME="$(jq -r '.summary_fields.inventory[].name' "$JSON" 2>/dev/null)"
  INVENTORY_DESCRIPTION="$(jq -r '.summary_fields.inventory[].description' "$JSON" 2>/dev/null)"
  USER_NAME="$(jq -r '.summary_fields.user[].username' "$JSON" 2>/dev/null)"
  USER_DESCRIPTION="$(jq -r '"\(.summary_fields.user[].first_name) \(.summary_fields.user[].last_name)"' "$JSON" 2>/dev/null)"
  OBJ1_VAR_NAME="${OBJECT1^^}_NAME"
  OBJ1_VAR_DESC="${OBJECT1^^}_DESCRIPTION"
  OBJ1_NAME="${!OBJ1_VAR_NAME}"
  OBJ1_DESC="${!OBJ1_VAR_DESC}"

  # shellcheck disable=SC2236
  if [[ ! -z "$OBJECT2" ]]
  then
    OBJ2_VAR_NAME="${OBJECT2^^}_NAME"
    OBJ2_VAR_DESC="${OBJECT2^^}_DESCRIPTION"
    OBJ2_NAME="${!OBJ2_VAR_NAME}"
    OBJ2_DESC="${!OBJ2_VAR_DESC}"
    if [[ "$OPERATION" = 'associate' ]]
    then
      OBJ1_DESC="$OBJECT2 $OBJ2_NAME"
    fi
  fi

  if [[ "$OPERATION" = 'create' ]]
  then

    [[ -z "$JOB_STATUS" ]] \
      || OBJ1_DESC="$OBJ1_DESC JOB_STATUS: $JOB_STATUS"

  fi

  TIMESTAMP="$(jq -r '.timestamp' "$JSON")"
  TIMESTAMP="${TIMESTAMP%%.*}"

  printf "\\n## ACTIVITY ID=%s OPERATION=%s ACTOR=%s TIMESTAMP=%s %s=%s DESCRIPTION=%s\\n\\n" \
    "$ID" "$OPERATION" "$ACTOR" "$TIMESTAMP" "${OBJECT1^^}" "$OBJ1_NAME" "$OBJ1_DESC"

  VARS_CHANGES="$(jq -r '.changes.variables | length' "$JSON")"
  ENABLED_CHANGES="$(jq -r '.changes.enabled | length' "$JSON")"

  DIFF_WIDTH='24'

  if [[ "$ENABLED_CHANGES" -gt 0 ]]
  then
    jq -r '.changes.enabled[0]'   "$JSON" > "$ENABLED_BEFORE"
    jq -r '.changes.enabled[1]'   "$JSON" > "$ENABLED_AFTER"
    DIFF_WIDTH="$((DIFF_WIDTH*3))"
    [[ "$DIFF_WIDTH" -lt 72 ]] && DIFF_WIDTH=72
    printf "### ENABLED CHANGED\\n\\n"
    printf "\`\`\`\\n"
    bash -c "$DIFF_CMD --width $DIFF_WIDTH $ENABLED_BEFORE $ENABLED_AFTER"
    printf "\`\`\`\\n"
  fi

  if [[ "$VARS_CHANGES" -gt 0 ]]
  then
    jq -r '.changes.variables[0]' "$JSON" > "$VARS_BEFORE"
    jq -r '.changes.variables[1]' "$JSON" > "$VARS_AFTER"
    DIFF_VARS_BEFORE="$(wc -L "$VARS_BEFORE")"
    DIFF_VARS_BEFORE="${DIFF_VARS_BEFORE%% *}"
    DIFF_VARS_AFTER="$(wc -L "$VARS_AFTER")"
    DIFF_VARS_AFTER="${DIFF_VARS_AFTER%% *}"
    [[ "$DIFF_VARS_BEFORE" -ge "$DIFF_VARS_AFTER" ]] && DIFF_WIDTH="$DIFF_VARS_BEFORE"
    [[ "$DIFF_VARS_AFTER" -ge "$DIFF_VARS_BEFORE" ]] && DIFF_WIDTH="$DIFF_VARS_AFTER"
    [[ -n "$DIFF_FACTOR" ]] || DIFF_FACTOR=3
    [[ "$DIFF_VARS_BEFORE" -lt 72 ]] && DIFF_FACTOR=2
    DIFF_WIDTH="$((DIFF_WIDTH*DIFF_FACTOR))"
    [[ "$DIFF_WIDTH" -lt 72 ]] && DIFF_WIDTH=72
    printf "### VARIABLES CHANGED\\n\\n"
    printf "\`\`\`\\n"
    bash -c "$DIFF_CMD --width $DIFF_WIDTH $VARS_BEFORE $VARS_AFTER"
    printf "\`\`\`\\n"
  fi

done < "$JSON_LIST"

rm -f "$VARS_BEFORE" "$VARS_AFTER" "$ENABLED_BEFORE" "$ENABLED_AFTER" 2>/dev/null
