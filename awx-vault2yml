#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2021 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck source=/dev/null
# shellcheck disable=SC2001
# shellcheck disable=SC2016

DIR_BIN=$(dirname "$0") && source "$DIR_BIN/awx-common"

function usage()
{
cat << EOF

Usage:

\`\`\`bash

  $BIN YAML

\`\`\`

Convert _AWX vault_ format to _YAML_ format.

Example:

\`\`\`bash

  $BIN host_vars/spvedev01.yml

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

TMPI='NONE'

if [[ ! -t 0 ]]
then

  TMPI="$(mktemp)"

  true > "$TMPI"

  while IFS= read -r PIPED_INPUT
  do
    echo "$PIPED_INPUT" >> "$TMPI"
  done

fi

[[ -z "$1"    ]] || FILE="$1"
[[ -e "$TMPI" ]] && FILE="$TMPI"
[[ -e "$FILE" ]] || die "NOT FOUND FILE: $FILE"

TMP="$(mktemp --suffix .tmp)"

VAULT_VAR='__ansible_vault'
VAULT_AES='\$ANSIBLE_VAULT;[0-9.]+;AES256;[a-z]+$'
VAULT_PAD='          '
VAULT_NUM="^[0-9]+[0-9a]+$"
VAULT_VLT='!vault |'

while read -r LINE
do

  [[ "$LINE" =~ ^$  ]] && continue
  [[ "$LINE" =~ \'$ ]] && continue

  if [[ "$LINE" =~ $VAULT_VAR ]]
  then

    echo "$LINE" | sed "s/.*$VAULT_VAR:.*/  $VAULT_VAR: |/g"
    VAULT_ID="$(echo "$LINE" | grep -Eo "$VAULT_AES")"
		[[ -z "$VAULT_ID" ]] || printf "%s%s\n" "$VAULT_PAD" "$VAULT_ID"

  else

    if [[ "${LINE// /}" =~ $VAULT_AES ]]
		then

      if [[ "${LINE// /}" =~ $VAULT_VLT ]]
      then
        echo "$LINE" | sed "s/.*$VAULT_VLT.*/    $VAULT_VAR: |/g"
      fi

      VAULT_ID="$(echo "${LINE// /}" | grep -Eo "$VAULT_AES")"
      printf "%s%s\n" "$VAULT_PAD" "$VAULT_ID"

    else

      if [[ "${LINE// /}" =~ $VAULT_NUM ]]
      then

        printf "%s%s\n" "$VAULT_PAD" "$LINE"

      else

        printf "%s\n" "$LINE"

      fi
    fi
  fi

done < "$FILE"

rm -f "$TMP"
rm -f "$TMPI"
