#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2019 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

BIN="$(basename "$0")"

function die()
{
  echo >&2 "$1"
  exit 1
}

function usage()
{
cat << EOF
Usage:

\`\`\`bash

  $BIN

\`\`\`

Update to last tag in \`version:\` of each repository in
\`requirements.yml\`.

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

cd "$PWD"               || die "ERROR TO CHANGE DIRECTORY $PWD"
[[ -n "$REQ"         ]] || REQ='requirements.yml'
[[ -z "$1"           ]] || REQ="$1"
[[ -e "$REQ"         ]] || die "NOT FOUND $REQ"
[[ -n "$DIFF"        ]] || DIFF='diff -y --suppress-common-lines'
[[ -n "$YQ_SORT"     ]] || YQ_SORT='. |= sort_by(.name)'
[[ -n "$YAML_LINT"   ]] || YAML_LINT=0
[[ -n "$ROLE_PREFIX" ]] || ROLE_PREFIX='ansible-role-'
[[ -n "$GIT_HOST"    ]] || GIT_HOST='github.com'
[[ -n "$GIT_TYPE"    ]] || GIT_TYPE='https://'
[[ -n "$GIT_URL"     ]] || GIT_URL="${GIT_TYPE}${GIT_HOST}"

DELTA="$(command -v delta || true)"
[[ -z "$DELTA" ]] || DIFF="$DELTA --paging never --side-by-side"

TMP="$(mktemp)"
YML="$(mktemp)"

printf "%s\\n" '---' > "$TMP"

yq -r '.[].name' "$REQ" | while read -r NAME
do

  OWNER="${NAME%.*}"
  ROLE="${NAME#*.}"

  YQ=".[] | select(.name == \"$NAME\")"
  yq -r "$YQ" "$REQ" > "$YML"

  SRC="$(yq -r .src "$YML")"
  [[ -z "$SRC" ]] || SRC="$GIT_URL/$OWNER/${ROLE_PREFIX}$ROLE"

  SCM="$(yq -r .scm "$YML")"
  VERSION="$(yq -r .version "$YML")"

  [[ -z "$SCM" ]] || SCM='git'

  LAST_TAG="$(git-ls-remote-tags "$SRC" | head -1)"
  echo >&2 "GET LAST TAG $LAST_TAG FROM SOURCE $SRC"
  [[ -z "$LAST_TAG" ]] && LAST_TAG="$VERSION"

YAML=$(cat << EOF
- name: $NAME
  scm: $SCM
  src: $SRC
  version: $LAST_TAG
EOF

)

echo "$YAML"

done | yq -y --sort-keys -r "$YQ_SORT" >> "$TMP"

bash -c "$DIFF $REQ $TMP || true"

if command -v yamllint >/dev/null
then
  if [[ "$YAML_LINT" -eq 1 ]]
  then
    yamllint --no-warnings "$TMP" || echo "INVALID YAML"
  fi
fi

mv -f "$TMP" "$REQ"
rm -f "$YML"
